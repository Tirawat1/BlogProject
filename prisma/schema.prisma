// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SubCategory {
  id  Int @id @default(autoincrement())
  Sub_topic String 
  description String?
  categoryId Int
  Category Category @relation (fields: [categoryId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Category {
  id          Int   @id @default(autoincrement())
  topic       String
  description String?
  SubCategory SubCategory[] // Define the one-to-many relationship
  blogs       Blog[]   // Define the one-to-many relationship
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Blog {
  id          Int      @id @default(autoincrement())
  title       String
  content     String
  published   Boolean  @default(false)
  author      String
  categoryId  Int   // Foreign key to Category
  category    Category @relation(fields: [categoryId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model message_tags {
  id          Int      @id @default(autoincrement())
  messageId   Int
  tagId       Int
  message     message @relation(fields: [messageId], references: [id])
  tags        tags @relation(fields: [tagId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

}

model message {
  id          Int      @id @default(autoincrement())
  sentense     String
  message_tags message_tags[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model tags {
  id          Int      @id @default(autoincrement())
  keyword     String
  message_tags message_tags[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}